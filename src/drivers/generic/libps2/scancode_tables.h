/*
 * generic/libps2/scancode_tables.h
 *
 * Copyright (c) 2025 Omar Berrow
*/

#include <int.h>

#include <vfs/keycode.h>

// May God have Mercy on the one to have to write a bug fix for this...

static keycode set1_keycode_normal[0x59] = {
     KEYCODE(SCANCODE_UNKNOWN,0x00),
     KEYCODE(SCANCODE_ESC,0x00),
     KEYCODE(SCANCODE_1,0x00),
     KEYCODE(SCANCODE_2,0x00),
     KEYCODE(SCANCODE_3,0x00),
     KEYCODE(SCANCODE_4,0x00),
     KEYCODE(SCANCODE_5,0x00),
     KEYCODE(SCANCODE_6,0x00),
     KEYCODE(SCANCODE_7,0x00),
     KEYCODE(SCANCODE_8,0x00),
    KEYCODE(SCANCODE_9,0x00),
    KEYCODE(SCANCODE_0,0x00),
    KEYCODE(SCANCODE_DASH,0x00),
    KEYCODE(SCANCODE_EQUAL,0x00),
    KEYCODE(SCANCODE_BACKSPACE,0x00),
    KEYCODE(SCANCODE_TAB,0x00),
    KEYCODE(SCANCODE_Q,0x00),
    KEYCODE(SCANCODE_W,0x00),
    KEYCODE(SCANCODE_E,0x00),
    KEYCODE(SCANCODE_R,0x00),
    KEYCODE(SCANCODE_T,0x00),
    KEYCODE(SCANCODE_Y,0x00),
    KEYCODE(SCANCODE_U,0x00),
    KEYCODE(SCANCODE_I,0x00),
    KEYCODE(SCANCODE_O,0x00),
    KEYCODE(SCANCODE_P,0x00),
    KEYCODE(SCANCODE_SQUARE_BRACKET_LEFT,0x00),
    KEYCODE(SCANCODE_SQUARE_BRACKET_RIGHT,0x00),
    KEYCODE(SCANCODE_ENTER,0x00),
    KEYCODE(SCANCODE_CTRL,CTRL),
    KEYCODE(SCANCODE_A,0),
    KEYCODE(SCANCODE_S,0),
    KEYCODE(SCANCODE_D,0),
    KEYCODE(SCANCODE_F,0),
    KEYCODE(SCANCODE_G,0),
    KEYCODE(SCANCODE_H,0),
    KEYCODE(SCANCODE_J,0),
    KEYCODE(SCANCODE_K,0),
    KEYCODE(SCANCODE_L,0),
    KEYCODE(SCANCODE_SEMICOLON,0),
    KEYCODE(SCANCODE_APOSTROPHE,0),
    KEYCODE(SCANCODE_BACKTICK,0),
    KEYCODE(SCANCODE_SHIFT,SHIFT),
    KEYCODE(SCANCODE_BACKSLASH,0),
    KEYCODE(SCANCODE_Z,0),
    KEYCODE(SCANCODE_X,0),
    KEYCODE(SCANCODE_C,0),
    KEYCODE(SCANCODE_V,0),
    KEYCODE(SCANCODE_B,0),
    KEYCODE(SCANCODE_N,0),
    KEYCODE(SCANCODE_M,0),
    KEYCODE(SCANCODE_COMMA,0),
    KEYCODE(SCANCODE_DOT,0),
    KEYCODE(SCANCODE_FORWARD_SLASH,0),
    KEYCODE(SCANCODE_SHIFT,SHIFT),
    KEYCODE(SCANCODE_STAR,NUMPAD),
    KEYCODE(SCANCODE_ALT,ALT),
    KEYCODE(SCANCODE_SPACE,0x00),
    KEYCODE(SCANCODE_UNKNOWN,CAPS_LOCK),
    KEYCODE(SCANCODE_F1,0x00),
    KEYCODE(SCANCODE_F2,0x00),
    KEYCODE(SCANCODE_F3,0x00),
    KEYCODE(SCANCODE_F4,0x00),
    KEYCODE(SCANCODE_F5,0x00),
    KEYCODE(SCANCODE_F6,0x00),
    KEYCODE(SCANCODE_F7,0x00),
    KEYCODE(SCANCODE_F8,0x00),
    KEYCODE(SCANCODE_F9,0x00),
    KEYCODE(SCANCODE_F10,0x00),
    KEYCODE(SCANCODE_UNKNOWN,NUM_LOCK),
    KEYCODE(SCANCODE_UNKNOWN,/*SCROLL_LOCK*/0x00), /* scroll lock */
    KEYCODE(SCANCODE_7,NUMPAD),
    KEYCODE(SCANCODE_8,NUMPAD),
    KEYCODE(SCANCODE_9,NUMPAD),
    KEYCODE(SCANCODE_DASH,NUMPAD),
    KEYCODE(SCANCODE_4,NUMPAD),
    KEYCODE(SCANCODE_5,NUMPAD),
    KEYCODE(SCANCODE_6,NUMPAD),
    KEYCODE(SCANCODE_PLUS,NUMPAD),
    KEYCODE(SCANCODE_1,NUMPAD),
    KEYCODE(SCANCODE_2,NUMPAD),
    KEYCODE(SCANCODE_3,NUMPAD),
    KEYCODE(SCANCODE_0,NUMPAD),
    KEYCODE(SCANCODE_DOT,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_F11,0),
    KEYCODE(SCANCODE_F12,0),
};

// NOTE: To index, subtract 0x10 from the extended scancode.
static keycode set1_keycode_extended[0x6E - 0x10] = {
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_ENTER,NUMPAD),
    KEYCODE(SCANCODE_CTRL,CTRL),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_FORWARD_SLASH,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_ALT,ALT),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_HOME,0),
    KEYCODE(SCANCODE_UP_ARROW,0),
    KEYCODE(SCANCODE_PGUP,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_LEFT_ARROW,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_RIGHT_ARROW,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_END,0),
    KEYCODE(SCANCODE_DOWN_ARROW,0),
    KEYCODE(SCANCODE_PGDOWN,0),
    KEYCODE(SCANCODE_INSERT,0),
    KEYCODE(SCANCODE_DELETE,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_SUPER_KEY,0),
    KEYCODE(SCANCODE_SUPER_KEY,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
};

static keycode set2_keycode_normal[0x84] = {
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_F9,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_F5,0),
    KEYCODE(SCANCODE_F3,0),
    KEYCODE(SCANCODE_F1,0),
    KEYCODE(SCANCODE_F2,0),
    KEYCODE(SCANCODE_F12,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_F10,0),
    KEYCODE(SCANCODE_F8,0),
    KEYCODE(SCANCODE_F6,0),
    KEYCODE(SCANCODE_F4,0),
    KEYCODE(SCANCODE_TAB,0),
    KEYCODE(SCANCODE_BACKTICK,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_ALT,ALT),
    KEYCODE(SCANCODE_SHIFT,SHIFT),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_CTRL,CTRL),
    KEYCODE(SCANCODE_Q,0),
    KEYCODE(SCANCODE_1,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_Z,0),
    KEYCODE(SCANCODE_S,0),
    KEYCODE(SCANCODE_A,0),
    KEYCODE(SCANCODE_W,0),
    KEYCODE(SCANCODE_2,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_C,0),
    KEYCODE(SCANCODE_X,0),
    KEYCODE(SCANCODE_D,0),
    KEYCODE(SCANCODE_E,0),
    KEYCODE(SCANCODE_4,0),
    KEYCODE(SCANCODE_3,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_SPACE,0),
    KEYCODE(SCANCODE_V,0),
    KEYCODE(SCANCODE_F,0),
    KEYCODE(SCANCODE_T,0),
    KEYCODE(SCANCODE_R,0),
    KEYCODE(SCANCODE_5,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_N,0),
    KEYCODE(SCANCODE_B,0),
    KEYCODE(SCANCODE_H,0),
    KEYCODE(SCANCODE_G,0),
    KEYCODE(SCANCODE_Y,0),
    KEYCODE(SCANCODE_6,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_M,0),
    KEYCODE(SCANCODE_J,0),
    KEYCODE(SCANCODE_U,0),
    KEYCODE(SCANCODE_7,0),
    KEYCODE(SCANCODE_8,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_COMMA,0),
    KEYCODE(SCANCODE_K,0),
    KEYCODE(SCANCODE_I,0),
    KEYCODE(SCANCODE_O,0),
    KEYCODE(SCANCODE_0,0),
    KEYCODE(SCANCODE_9,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_DOT,0),
    KEYCODE(SCANCODE_FORWARD_SLASH,0),
    KEYCODE(SCANCODE_L,0),
    KEYCODE(SCANCODE_SEMICOLON,0),
    KEYCODE(SCANCODE_P,0),
    KEYCODE(SCANCODE_DASH,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_APOSTROPHE,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_SQUARE_BRACKET_LEFT,0),
    KEYCODE(SCANCODE_EQUAL,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,CAPS_LOCK),
    KEYCODE(SCANCODE_SHIFT,SHIFT),
    KEYCODE(SCANCODE_ENTER,0),
    KEYCODE(SCANCODE_SQUARE_BRACKET_RIGHT,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_BACKSLASH,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_BACKSPACE,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_1,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_4,NUMPAD),
    KEYCODE(SCANCODE_7,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_UNKNOWN,0),
    KEYCODE(SCANCODE_0,NUMPAD),
    KEYCODE(SCANCODE_DOT,NUMPAD),
    KEYCODE(SCANCODE_2,NUMPAD),
    KEYCODE(SCANCODE_5,NUMPAD),
    KEYCODE(SCANCODE_6,NUMPAD),
    KEYCODE(SCANCODE_8,NUMPAD),
    KEYCODE(SCANCODE_ESC,0),
    KEYCODE(SCANCODE_UNKNOWN,NUM_LOCK),
    KEYCODE(SCANCODE_F11,0),
    KEYCODE(SCANCODE_PLUS,NUMPAD),
    KEYCODE(SCANCODE_3,NUMPAD),
    KEYCODE(SCANCODE_DASH,NUMPAD),
    KEYCODE(SCANCODE_STAR,NUMPAD),
    KEYCODE(SCANCODE_9,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,/*SCROLL_LOCK*/0x00), // scroll lock
    KEYCODE(SCANCODE_UNKNOWN, 0x0),
    KEYCODE(SCANCODE_UNKNOWN, 0x0),
    KEYCODE(SCANCODE_UNKNOWN, 0x0),
    KEYCODE(SCANCODE_UNKNOWN, 0x0),
    KEYCODE(SCANCODE_F7, 0x0),
};

// NOTE: To index, subtract 0x10 from the extended scancode.
static keycode set2_keycode_extended[0x7e - 0x10] = {
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_ALT,ALT),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_CTRL,CTRL),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_SUPER_KEY,SUPER_KEY),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_SUPER_KEY,SUPER_KEY),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_FORWARD_SLASH,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_ENTER,NUMPAD),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_END,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_LEFT_ARROW,0x00),
    KEYCODE(SCANCODE_HOME,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_INSERT,0x00),
    KEYCODE(SCANCODE_DELETE,0x00),
    KEYCODE(SCANCODE_DELETE,0x00),
    KEYCODE(SCANCODE_DOWN_ARROW,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_RIGHT_ARROW,0x00),
    KEYCODE(SCANCODE_UP_ARROW,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_PGDOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_UNKNOWN,0x00),
    KEYCODE(SCANCODE_PGUP,0x00),
};  